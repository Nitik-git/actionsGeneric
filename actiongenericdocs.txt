name: Generic Workflow

on:
  push:
    branches:
      - main

jobs:
  process_service:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [service1, service2, service3]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Process service
      run: |
        if [ "${{ matrix.service }}" = "service1" ]; then
          # Actions for service1
          echo "Processing service1..."
        elif [ "${{ matrix.service }}" = "service2" ]; then
          # Actions for service2
          echo "Processing service2..."
        elif [ "${{ matrix.service }}" = "service3" ]; then
          # Actions for service3
          echo "Processing service3..."
        else
          echo "Invalid service specified!"
          exit 1
        fi
        
        
Bring out the name of modified services
git diff-tree --no-commit-id --name-only -r HEAD | awk -F/ '{ print $1}' | uniq | sed -n -e '/api/p' -e '/assessment/p'   |  cat > file1.txt

TESTING=`git diff-tree --no-commit-id --name-only -r HEAD | awk -F/ '{ print $1}' | uniq | sed -n -e '/api/p' -e '/assessment/p'` 
echo $TESTING




      # - name: test git
      #   run: |
      #      files=$(git log -1 --name-only --pretty=format:)
      #      echo "$files"
            
      # - name: Fetch Last Commit
      #   id: fetchLastCommit
      #   run: |
        
      #     commit=$(git log -1 --pretty=format:%h)

          
      #     files=$(git show --name-only --pretty=format:%h $commit)

      #     echo "$files"

      
    # echo "::set-output name=commitID::$commit"
    # echo "::set-output name=changedFiles::$files"

      # - name: Print Last Commit Details
      #   run: |

      #     commitID="${{ steps.fetchLastCommit.outputs.commitID }}"
      #     changedFiles="${{ steps.fetchLastCommit.outputs.changedFiles }}"
      #     echo "Changed Files:"
      #     echo "$changedFiles"


name: availability-workflow

on:
  pull_request:
    types: [opened]
    branches-ignore:
      - 'qa1'
      - 'qa2'

# permissions:
#   actions: write

jobs:
  firstjob:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: test/PRtrigger
      
      - name: display branch
        run: |-
         git branch
         echo ${{ github.head_ref }} 
             

      - name: Check availability of QA
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |-          
              qa1_str=$(gh pr list --base qa1)
              if [[ "$qa1_str" =~ ^[0-9]+ ]]; then
                qa1_mess="qa1 is occupied"
              fi

              qa2_str=$(gh pr list --base qa2)
              if [[ "$qa2_str" =~ ^[0-9]+ ]]; then
                qa2_mess="qa2 is occupied"
              fi

              qa3_str=$(gh pr list --base qa3)
              if [[ "$qa3_str" =~ ^[0-9]+ ]]; then
                qa3_mess="qa3 is occupied"
              fi




              my_array=()

              if [ -z "$qa1_mess" ]; then
                my_array+=("qa1")
              fi

              if [ -z "$qa2_mess" ]; then
                my_array+=("qa2")
              fi

              if [ -z "$qa3_mess" ]; then
                my_array+=("qa3")
              fi

              variable=${my_array[@]}
              echo "full array in variable : $variable "
              echo "var=$variable" >> "$GITHUB_ENV"
              echo "var simple github env : $var"
              echo "var complex github env : ${{env.var}}"
              echo "cut first word var : $(echo "$var" | sed 's/ .*//')"
              echo "cut first word variable : $(echo "$variable" | sed 's/ .*//')"

      - name: 'Create PR'
        if: env.var != 'null'
        env: 
          GH_TOKEN: ${{ secrets.GH_TOKEN }}      
        run: |-
          first_value=$(echo "$var" | sed 's/ .*//')
          echo "test=$first_value" >> "$GITHUB_ENV"
          echo "${{env.test}}"
          gh pr list
          git branch
          gh pr create --base "${{ env.test }}" -t "tag test" -b "testiiing"

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.NA_WEBHOOK_URL }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: '${{ env.test }} is available'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp

